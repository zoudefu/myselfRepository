<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jms="http://www.springframework.org/schema/jms"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
     http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
     http://www.springframework.org/schema/context
     http://www.springframework.org/schema/context/spring-context-3.0.xsd
    http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
	http://www.springframework.org/schema/jms http://www.springframework.org/schema/jms/spring-jms-3.0.xsd">
	
    <context:component-scan base-package="com.furui"/>
    
     <!--读取配置文件-->
    <bean id="propertyConstantUtil" class="com.furui.ydfr.common.util.PropertyConstantUtil">
        <property name="locations">
            <array>
                <value>classpath:config/**/*.properties</value>
            </array>
        </property>
    </bean> 
   <!--  连接 activemq
    <amq:connectionFactory id="amqConnectionFactory" brokerURL="${activemq_url}" userName="${activemq_username}" password="${activemq_password}"/>        
    这里可以采用连接池的方式连接PooledConnectionFactoryBean
    <bean id="connectionFactory" class="org.springframework.jms.connection.CachingConnectionFactory">
        配置连接
        <property name="targetConnectionFactory" ref="amqConnectionFactory"/>
        会话的最大连接数
        <property name="sessionCacheSize" value="10"/>
    真正可以产生Connection的ConnectionFactory，由对应的 JMS服务厂商提供
	<bean id="targetConnectionFactory" class="org.apache.activemq.ActiveMQConnectionFactory">
		<property name="brokerURL" value="${activemq_url}"/>
		<property name="userName" value="${activemq_username}"/>
		<property name="password" value="${activemq_password}"/>
	</bean>
	
	Spring用于管理真正的ConnectionFactory的ConnectionFactory
	<bean id="connectionFactory" class="org.springframework.jms.connection.SingleConnectionFactory">
		目标ConnectionFactory对应真实的可以产生JMS Connection的ConnectionFactory
		<property name="targetConnectionFactory" ref="targetConnectionFactory"/>
	</bean>
	
	 Spring提供的JMS工具类，它可以进行消息发送、接收等
	<bean id="jmsTemplate" class="org.springframework.jms.core.JmsTemplate">
		这个connectionFactory对应的是我们定义的Spring提供的那个ConnectionFactory对象
		<property name="connectionFactory" ref="connectionFactory"/>
	</bean> 
	
	1这个是队列目的地
	<bean id="queueDestination" class="org.apache.activemq.command.ActiveMQQueue">
		<constructor-arg>
			<value>queue</value>
		</constructor-arg>
	</bean>
	消息监听器
	<bean id="consumerMessageListener" class="com.furui.ydfr.Listen.ConsumerMessageListener">
		<property name="messageConverter" ref="emailMessageConverter"/>
	</bean>
	
	消息监听容器
	<bean id="jmsContainer"
		class="org.springframework.jms.listener.DefaultMessageListenerContainer">
		<property name="connectionFactory" ref="connectionFactory" />
		<property name="destination" ref="queueDestination" />
		<property name="messageListener" ref="consumerMessageListener" />
	</bean>

    2这个是sessionAwareQueue目的地
	<bean id="sessionAwareQueue" class="org.apache.activemq.command.ActiveMQQueue">
		<constructor-arg>
			<value>sessionAwareQueue</value>
		</constructor-arg>
	</bean>
		可以获取session的MessageListener
	<bean id="consumerSessionAwareMessageListener" class="com.furui.ydfr.Listen.ConsumerSessionAwareMessageListener">
		<property name="destination" ref="queueDestination"/>
	</bean>
	<bean id="sessionAwareListenerContainer"
		class="org.springframework.jms.listener.DefaultMessageListenerContainer">
		<property name="connectionFactory" ref="connectionFactory" />
		<property name="destination" ref="sessionAwareQueue" />
		<property name="messageListener" ref="consumerSessionAwareMessageListener" />
	</bean>
	
	3用于测试消息监听适配器的队列目的地
	<bean id="adapterQueue" class="org.apache.activemq.command.ActiveMQQueue">
		<constructor-arg>
			<value>adapterQueue</value>
		</constructor-arg>
	</bean>
		消息监听适配器
	<bean id="messageListenerAdapter" class="org.springframework.jms.listener.adapter.MessageListenerAdapter">
		<property name="delegate">
			<bean class="com.furui.ydfr.Listen.ConsumerListener"/>
		</property>
		<property name="defaultListenerMethod" value="receiveMessage"/>
		<property name="defaultResponseDestination" ref="defaultResponseQueue"/>
		<property name="messageConverter">
			<null/>
		</property>
	</bean>
	消息监听适配器对应的监听容器
	<bean id="messageListenerAdapterContainer" class="org.springframework.jms.listener.DefaultMessageListenerContainer">
		<property name="connectionFactory" ref="connectionFactory"/>
		<property name="destination" ref="adapterQueue"/>
		<property name="messageListener" ref="messageListenerAdapter"/>使用MessageListenerAdapter来作为消息监听器
	</bean>
	
	
	4用于测试消息回复的
	<bean id="responseQueue" class="org.apache.activemq.command.ActiveMQQueue">
		<constructor-arg>
			<value>responseQueue</value>
		</constructor-arg>
	</bean>
	responseQueue对应的监听器
	<bean id="responseQueueListener" class="com.furui.ydfr.Listen.ResponseQueueListener"/>
	responseQueue对应的监听容器
	<bean id="responseQueueMessageListenerContainer" class="org.springframework.jms.listener.DefaultMessageListenerContainer">
		<property name="connectionFactory" ref="connectionFactory"/>
		<property name="destination" ref="responseQueue"/>
		<property name="messageListener" ref="responseQueueListener"/>
	</bean>
	
	5 默认的消息回复队列
	<bean id="defaultResponseQueue" class="org.apache.activemq.command.ActiveMQQueue">
		<constructor-arg>
			<value>defaultResponseQueue</value>
		</constructor-arg>
	</bean>
	defaultResponseQueue对应的监听器
	<bean id="defaultResponseQueueListener" class="com.furui.ydfr.Listen.DefaultResponseQueueListener"/>
	defaultResponseQueue对应的监听容器
	<bean id="defaultResponseQueueMessageListenerContainer" class="org.springframework.jms.listener.DefaultMessageListenerContainer">
		<property name="connectionFactory" ref="connectionFactory"/>
		<property name="destination" ref="defaultResponseQueue"/>
		<property name="messageListener" ref="defaultResponseQueueListener"/>
	</bean>
	
	这个是主题目的地
	<bean id="topicDestination" class="org.apache.activemq.command.ActiveMQTopic">
		<constructor-arg value="topicDestination"/>
	</bean>
    <bean id="topicConsumerListen" class="com.furui.ydfr.service.impl.TopicConsumer">
    </bean>
      消息监听容器
   <bean id="topicListenerContainer"
          class="org.springframework.jms.listener.DefaultMessageListenerContainer">
        <property name="connectionFactory" ref="connectionFactory" />
        <property name="destination" ref="topicDestination" />
        <property name="messageListener" ref="topicConsumerListen" />
    </bean>
	
	类型转换器
	<bean id="emailMessageConverter" class="com.furui.ydfr.converter.EmailMessageConverter"/> -->
</beans>